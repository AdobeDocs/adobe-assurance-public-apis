{"version":3,"file":"component---src-pages-usage-index-md-4ffa4f82986f40af1d0d.js","mappings":"mOAUsBA,E,wEAFTC,EAAe,CAAC,EAOvBC,GALgBF,EAKK,OALG,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5B,eAASG,EACjB,GAGKG,EAAc,CAClBL,aAAAA,GAEIM,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGP,GACF,YACD,OAAO,SAACI,GAAD,UAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAG5E,SAACT,EAAD,CAAMU,MAAM,gBAAgBD,QAAQ,UACpC,eACE,GAAM,uBADR,wBAGA,kEACA,eACE,GAAM,WADR,YAGA,eACE,GAAM,iBADR,kBAGA,qBAAK,iBAAME,WAAW,MAClB,UAAa,iBADZ,mTASL,eACE,GAAM,4BADR,6BAGA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,2UASL,eACE,GAAM,eADR,gBAGA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,wYASL,eACE,GAAM,gCADR,iCAGA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,yaASL,eACE,GAAM,gBADR,iBAGA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,8WASL,eACE,GAAM,aADR,cAGA,eACE,GAAM,oBADR,qBAGA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,0dASL,eACE,GAAM,oBADR,qBAGA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,seASL,eACE,GAAM,oBADR,qBAGA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,mVAWR,CAEDJ,EAAWK,gBAAiB,C","sources":["webpack://adobe-assurance-public-apis/./src/pages/usage/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/adobe-assurance-public-apis/adobe-assurance-public-apis/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Hero = makeShortcode(\"Hero\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Hero slots=\"heading, text\" mdxType=\"Hero\" />\n    <h1 {...{\n      \"id\": \"assurance-api-usage\"\n    }}>{`Assurance API Usage`}</h1>\n    <p>{`cURL command examples for queries/mutations`}</p>\n    <h2 {...{\n      \"id\": \"queries\"\n    }}>{`Queries`}</h2>\n    <h3 {...{\n      \"id\": \"read-sessions\"\n    }}>{`Read Sessions`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`curl 'https://graffias.adobe.io/graffias/graphql' \\\\\n  -H 'Content-Type: application/json' \\\\\n  -H 'x-gw-ims-org-id: [Organization ID]@Adobe.Org' \\\\\n  -H 'x-api-key: [Client ID]' \\\\\n  -H 'Authorization: Bearer [Access Token]' \\\\\n  --data-binary '{\"query\":\"query { sessions { uuid name }}\"}'\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"read-session-annotations\"\n    }}>{`Read Session Annotations`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`curl 'https://graffias.adobe.io/graffias/graphql' \\\\\n  -H 'Content-Type: application/json' \\\\\n  -H 'x-gw-ims-org-id: [Organization ID]@Adobe.Org' \\\\\n  -H 'x-api-key: [Client ID]' \\\\\n  -H 'Authorization: Bearer [Access Token]' \\\\\n  --data-binary '{\"query\":\"query { sessions { uuid name annotations { payload } }}\"}'\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"read-events\"\n    }}>{`Read Events`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`curl 'https://graffias.adobe.io/graffias/graphql' \\\\\n  -H 'Content-Type: application/json' \\\\\n  -H 'x-gw-ims-org-id: [Organization ID]@Adobe.Org' \\\\\n  -H 'x-api-key: [Client ID]' \\\\\n  -H 'Authorization: Bearer [Access Token]' \\\\\n  --data-binary '{\"query\":\"query {  events(sessionUuid:\\\\\"[session UUID]\\\\\",_page:0,_size:50){ uuid clientId timestamp vendor type payload }}\"}'\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"read-events-with-annotations\"\n    }}>{`Read Events with Annotations`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`curl 'https://graffias.adobe.io/graffias/graphql' \\\\\n  -H 'Content-Type: application/json' \\\\\n  -H 'x-gw-ims-org-id: [Organization ID]@Adobe.Org' \\\\\n  -H 'x-api-key: [Client ID]' \\\\\n  -H 'Authorization: Bearer [Access Token]' \\\\\n  --data-binary '{\"query\":\"query {  events(sessionUuid:\\\\\"[session UUID]\\\\\",_page:0,_size:50){ uuid clientId timestamp vendor type payload annotations { namespace payload }}}\"}'\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"read-plugins\"\n    }}>{`Read Plugins`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`curl 'https://graffias.adobe.io/graffias/graphql' \\\\\n  -H 'Content-Type: application/json' \\\\\n  -H 'x-gw-ims-org-id: [Organization ID]@Adobe.Org' \\\\\n  -H 'x-api-key: [Client ID]' \\\\\n  -H 'Authorization: Bearer [Access Token]' \\\\\n  --data-binary '{\"query\":\"query {  plugins { uuid, namespace, updatedTsAfter, updatedTsBefore, displayName, type } }\"}'\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"mutations\"\n    }}>{`Mutations`}</h2>\n    <h3 {...{\n      \"id\": \"create-a-session\"\n    }}>{`Create a Session`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`curl 'https://graffias.adobe.io/graffias/graphql' \\\\\n  -H 'Content-Type: application/json' \\\\\n  -H 'x-gw-ims-org-id: [Organization ID]@Adobe.Org' \\\\\n  -H 'x-api-key: [Client ID]' \\\\\n  -H 'Authorization: Bearer [Access Token]' \\\\\n  --data-binary '{\"query\":\"mutation createSession($session: SessionInput!) { createSession(session: $session) { orgId uuid name link token }}\",\"variables\":{\"session\":{\"name\":\"test-mutation\",\"link\":\"testUrl://default\"}}}'\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"update-a-session\"\n    }}>{`Update a Session`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`curl 'https://graffias.adobe.io/graffias/graphql' \\\\\n  -H 'Content-Type: application/json' \\\\\n  -H 'x-gw-ims-org-id: [Organization ID]@Adobe.Org' \\\\\n  -H 'x-api-key: [Client ID]' \\\\\n  -H 'Authorization: Bearer [Access Token]' \\\\\n  --data-binary '{\"query\":\"mutation name($session: SessionInput!) { updateSession(session: $session) { orgId uuid name link }}\",\"variables\":{\"session\":{\"uuid\":\"[session UUID]\",\"name\":\"session-renamed\",\"link\":\"myNewUrl://default\"}}}'\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"delete-a-session\"\n    }}>{`Delete a Session`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`curl 'https://graffias.adobe.io/graffias/graphql' \\\\\n  -H 'Content-Type: application/json' \\\\\n  -H 'x-gw-ims-org-id: [Organization ID]@Adobe.Org' \\\\\n  -H 'x-api-key: [Client ID]' \\\\\n  -H 'Authorization: Bearer [Access Token]' \\\\\n  --data-binary '{\"query\":\"mutation deleteSession($uuid: UUID!) { deleteSession(uuid:$uuid)}\"}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","Hero","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","slots","parentName","isMDXComponent"],"sourceRoot":""}