{"version":3,"file":"component---src-pages-usage-index-md-eede38198a45c5f12291.js","mappings":"0OAUsBA,E,mEAFTC,EAAe,CAAC,EAOvBC,GALgBF,EAKK,OALG,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5B,eAASG,EACjB,GAGKG,EAAc,CAClBL,aAAAA,GAEIM,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGP,GACF,YACD,OAAO,SAACI,GAAD,UAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAG5E,SAACT,EAAD,CAAMU,MAAM,gBAAgBD,QAAQ,UACpC,eACE,GAAM,uBADR,wBAGA,qDACA,eACE,GAAM,iBADR,mBAGA,qBAAK,iBAAME,WAAW,MAClB,UAAa,oBADZ,2eAaL,eACE,GAAM,oBADR,sBAGA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,oBADZ,8rBAaL,eACE,GAAM,oBADR,sBAGA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,oBADZ,+sBAYL,eACE,GAAM,4BADR,8BAGA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,oBADZ,6kBAaL,eACE,GAAM,oBADR,sBAGA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,oBADZ,8fAaL,eACE,GAAM,eADR,iBAGA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,oBADZ,kmBAaL,eACE,GAAM,gCADR,kCAGA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,oBADZ,iqBAeR,CAEDJ,EAAWK,gBAAiB,C","sources":["webpack://dev-site-documentation-template/./src/pages/usage/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/adobe-assurance-public-apis/adobe-assurance-public-apis/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Hero = makeShortcode(\"Hero\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Hero slots=\"heading, text\" mdxType=\"Hero\" />\n    <h1 {...{\n      \"id\": \"assurance-api-usage\"\n    }}>{`Assurance API Usage`}</h1>\n    <p>{`Commands for queries/mutations`}</p>\n    <h3 {...{\n      \"id\": \"read-sessions\"\n    }}>{`Read Sessions:`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-console\"\n      }}>{`curl 'http://[adobe.io url]/graffias/graphql' \n    -H 'Accept-Encoding: gzip, deflate, br' \n    -H 'Content-Type: application/json' \n    -H 'Accept: application/json' \n    -H 'Connection: keep-alive' \n    -H 'x-gw-ims-org-id: [Organization ID]@AdobeOrg' \n    -H 'x-gw-ims-user-id: [tech account ID]@techacct.adobe.com' \n    -H 'x-api-key: [Client ID]' \n    -H 'Authorization: Bearer [Access Token]' \n    --data-binary '{\"query\":\"query {  sessions {   name    uuid  }}\"}'\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"create-a-session\"\n    }}>{`Create a Session:`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-console\"\n      }}>{`curl 'http://[adobe.io url]/graffias/graphql' \n    -H 'Accept-Encoding: gzip, deflate, br' \n    -H 'Content-Type: application/json' \n    -H 'Accept: application/json' \n    -H 'Connection: keep-alive' \n    -H 'x-gw-ims-org-id: [Organization ID]@AdobeOrg'\n    -H 'x-gw-ims-user-id: [tech account ID]@techacct.adobe.com' \n    -H 'x-api-key: [Client ID]' \n    -H 'Authorization: Bearer [Access Token]' \n    --data-binary '{\"query\":\"mutation name($session: SessionInput!) {  createSession(session: $session) {    orgId    uuid    name    link    token    firstName    lastName    createdById  }}\",\"variables\":{\"session\":{\"name\":\"test-mutation\",\"link\":\"testUrl://default\"}}}'\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"update-a-session\"\n    }}>{`Update a Session:`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-console\"\n      }}>{`curl 'http://[adobe.io url]/graffias/graphql' \n    -H 'Accept-Encoding: gzip, deflate, br' -H 'Content-Type: application/json' \n    -H 'Accept: application/json' \n    -H 'Connection: keep-alive' \n    -H 'x-gw-ims-org-id: [Organization ID]@AdobeOrg' \n    -H 'x-gw-ims-user-id: [tech account ID]@techacct.adobe.com' \n    -H 'x-api-key: [Client ID]' \n    -H 'Authorization: Bearer [Access Token]' \n    --data-binary '{\"query\":\"mutation name($session: SessionInput!) {  updateSession(session: $session) {    orgId    uuid    name    link    firstName    lastName    createdById  }}\",\"variables\":{\"session\":{\"uuid\":\"[session UUID]\",\"name\":\"session-renamed\",\"link\":\"myNewUrl://default\"}}}'\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"read-session-annotations\"\n    }}>{`Read Session Annotations:`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-console\"\n      }}>{`curl 'http://[adobe.io url]/graffias/graphql' \n    -H 'Accept-Encoding: gzip, deflate, br' \n    -H 'Content-Type: application/json' \n    -H 'Accept: application/json' \n    -H 'Connection: keep-alive' \n    -H 'x-gw-ims-org-id: [Organization ID]@AdobeOrg' \n    -H 'x-gw-ims-user-id: [tech account ID]@techacct.adobe.com' \n    -H 'x-api-key: [Client ID]' \n    -H 'Authorization: Bearer [Access Token]' \n    --data-binary '{\"query\":\"query {  sessions {    uuid    token    name    firstName    lastName    updatedById    updatedTs    annotations {      payload    }  }}\"}'\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"delete-a-session\"\n    }}>{`Delete a Session:`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-console\"\n      }}>{`curl 'http://[adobe.io url]/graffias/graphql' \n    -H 'Accept-Encoding: gzip, deflate, br' \n    -H 'Content-Type: application/json' \n    -H 'Accept: application/json' \n    -H 'Connection: keep-alive' \n    -H 'x-gw-ims-org-id: [Organization ID]@AdobeOrg' \n    -H 'x-gw-ims-user-id: [tech account ID]@techacct.adobe.com' \n    -H 'x-api-key: [Client ID]' \n    -H 'Authorization: Bearer [Access Token]' \n    --data-binary '{\"query\":\"mutation name($uuid: UUID!) {  deleteSession(uuid:$uuid)}\"}'\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"read-events\"\n    }}>{`Read Events:`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-console\"\n      }}>{`curl 'http://[adobe.io url]/graffias/graphql' \n    -H 'Accept-Encoding: gzip, deflate, br' \n    -H 'Content-Type: application/json' \n    -H 'Accept: application/json' \n    -H 'Connection: keep-alive' \n    -H 'x-gw-ims-org-id: [Organization ID]@AdobeOrg' \n    -H 'x-gw-ims-user-id: [tech account ID]@techacct.adobe.com' \n    -H 'x-api-key: [Client ID]' \n    -H 'Authorization: Bearer [Access Token]' \n    --data-binary '{\"query\":\"query {  events(sessionUuid:\\\\\"00264086-c771-431c-a55a-d2df9eadb89f\\\\\",_page:0,_size:50){    uuid    clientId    timestamp    vendor    type    payload  }}\"}'\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"read-events-with-annotations\"\n    }}>{`Read Events with Annotations:`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-console\"\n      }}>{`curl 'http://[adobe.io url]/graffias/graphql' \n    -H 'Accept-Encoding: gzip, deflate, br' \n    -H 'Content-Type: application/json' \n    -H 'Accept: application/json' \n    -H 'Connection: keep-alive' \n    -H 'x-gw-ims-org-id: [Organization ID]@AdobeOrg' \n    -H 'x-gw-ims-user-id: [tech account ID]@techacct.adobe.com' \n    -H 'x-api-key: [Client ID]' \n    -H 'Authorization: Bearer [Access Token]' \n    --data-binary --data-binary '{\"query\":\"query {  events(sessionUuid:\\\\\"00264086-c771-431c-a55a-d2df9eadb89f\\\\\",_page:0,_size:50){    uuid    clientId    timestamp    vendor    type    payload    annotations {      namespace      payload    }  }}\"}'\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","Hero","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","slots","parentName","isMDXComponent"],"sourceRoot":""}